
require 'rubygems'

require 'optparse' 
require 'ostruct'
require 'parseconfig'
require 'fileutils'

require "../lib/modules/GenericApplication"
require "../lib/modules/IOHelper"
require "../lib/classes/CSSPrimer"

DEFAULT_CSS_FILE = "primed_styles.css"
CUSTOM_CSS_FILE = "new_styles.css"

describe CSSPrimer, "#initialize" do

	it "should have default css file initialized" do
	
		primer = CSSPrimer.new(ARGV, STDIN)
		primer.css_file.should == primer.config("DEFAULT_CSS_FILE_OUT")
		
	end
	
end

describe CSSPrimer, "#prime!" do

	after(:each) do
		File.delete(CUSTOM_CSS_FILE) if File.exists?(CUSTOM_CSS_FILE)
		File.delete(DEFAULT_CSS_FILE) if File.exists?(DEFAULT_CSS_FILE)
	end

	it "should parse an html file (as only option specified)" do
	
		primer = CSSPrimer.new(ARGV, STDIN)
		primer.markup_file = "../examples/test.html"
		primer.prime!
		
	end

	it "should parse an xml file (as only option specified)" do
	
		primer = CSSPrimer.new(ARGV, STDIN)
		primer.markup_file = "../examples/test.xml"
		primer.prime!
		
	end

	it "should parse an xml file to custom css file" do
	
		primer = CSSPrimer.new(ARGV, STDIN)
		primer.markup_file = "../examples/test.xml"
		primer.css_file = CUSTOM_CSS_FILE
		primer.prime!

		failure_message_for_should("#{CUSTOM_CSS_FILE} was not found!") if !File.exists?(CUSTOM_CSS_FILE) 
		
	end

	
end